def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

if (project.hasProperty("local.signing") || project.hasProperty("jenkins.signing")) {
    apply from: getSigningFile()
}

android {
    compileSdkVersion 34
    buildToolsVersion "23.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.sharjah.ladiesclub"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions "slcMode"
    productFlavors {
        develop {
            dimension "slcMode"
        }
        qa {
            dimension "slcMode"
        }
        uat {
            dimension "slcMode"
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            shrinkResources true
            minifyEnabled true
            crunchPngs false
//            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            crunchPngs false
//            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            dependencies {
                //noinspection GradleCompatible
                implementation 'com.android.support:support-fragment:29.0.0'
            }
        }
    }

}


def getSigningFile() {
    def signingHome = System.getenv("SIGNING_HOME")
    if (signingHome != null) {
        return signingHome + project.property("jenkins.signing")
    } else {
        return project.property("local.signing")
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-core'
    implementation('com.google.firebase:firebase-auth') {
        exclude module: "play-services-safetynet"
    }
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:multidex:2.0.1'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation("androidx.appcompat:appcompat:1.7.0")
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-common:2.18.7'
    implementation 'com.google.android.exoplayer:exoplayer-extractor:2.18.7'
}

configurations.all {
    exclude group: 'com.google.android.gms', module: 'play-services-safetynet'
}